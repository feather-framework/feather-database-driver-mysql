name: Run tests

on:
  push:
    branches:
    - main
    paths:
    - '**.swift'
  pull_request:
    branches:
    - main

jobs:
  linux-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        swift:
          - 'swift:5.9'
          - 'swift:5.10'
        database:
          - mysql:8.2
    container:
      image: ${{ matrix.swift }}
    services:
      mysql:
        image: ${{ matrix.database }}
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: test_database
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Test
      env:
        MYSQL_HOST: mysql
        MYSQL_DB: test_database
        MYSQL_USER: test_user
        MYSQL_PASS: test_password
      run: swift test --parallel --enable-code-coverage
  macOS-tests:
    runs-on: self-hosted
    steps:
      - name: Setup MySQL DB
        shell: bash
        env:
          MYSQL_DATABASE: test_database
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        run: |
          brew install mysql && brew link --force mysql
          brew services restart mysql
          until echo | mysql -u root; do sleep 1; done
          mysql -u root --batch <<-SQL
              CREATE USER ${MYSQL_USER}@localhost IDENTIFIED BY '${MYSQL_PASSWORD}';
              CREATE DATABASE ${MYSQL_DATABASE};
              GRANT ALL PRIVILEGES ON ${MYSQL_DATABASE}.* TO ${MYSQL_USER}@localhost;
          SQL
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: test_database
          MYSQL_USER: test_user
          MYSQL_PASS: test_password
        run: swift test --parallel --enable-code-coverage
